name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        run: |
          # 提取版本信息
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "TAG=${VERSION}" >> $GITHUB_OUTPUT
            echo "📦 Building tagged release: ${VERSION}"
          else
            echo "TAG=latest" >> $GITHUB_OUTPUT
            echo "📦 Building latest from main branch"
          fi
          
          # 提取仓库名（小写）
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "REPO_LOWER=${REPO_LOWER}" >> $GITHUB_OUTPUT
          echo "🐳 Image: ${{ env.REGISTRY }}/${REPO_LOWER}"

      - name: Build and push with Docker Bake
        uses: docker/bake-action@v5
        if: github.event_name != 'pull_request'
        with:
          files: docker-bake.hcl
          push: true
          set: |
            bot.tags=${{ env.REGISTRY }}/${{ steps.meta.outputs.REPO_LOWER }}:${{ steps.meta.outputs.TAG }}
            bot.tags=${{ env.REGISTRY }}/${{ steps.meta.outputs.REPO_LOWER }}:latest
        env:
          TAG: ${{ steps.meta.outputs.TAG }}

      - name: Build only (for PR)
        uses: docker/bake-action@v5
        if: github.event_name == 'pull_request'
        with:
          files: docker-bake.hcl
          push: false
          set: |
            bot.tags=${{ env.REGISTRY }}/${{ steps.meta.outputs.REPO_LOWER }}:pr-${{ github.event.pull_request.number }}
        env:
          TAG: pr-${{ github.event.pull_request.number }}

      - name: Summary
        if: github.event_name != 'pull_request'
        run: |
          echo "## ✅ Docker Image Published" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📦 **Image:** \`${{ env.REGISTRY }}/${{ steps.meta.outputs.REPO_LOWER }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🏷️ **Tags:**" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ steps.meta.outputs.TAG }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`latest\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🖥️ **Platforms:**" >> $GITHUB_STEP_SUMMARY
          echo "- \`linux/amd64\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`linux/arm64\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Pull and run:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.REGISTRY }}/${{ steps.meta.outputs.REPO_LOWER }}:${{ steps.meta.outputs.TAG }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
